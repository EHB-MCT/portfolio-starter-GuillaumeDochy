{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micyl\\\\Documents\\\\_.SCHOOL\\\\2023-24\\\\Dev_5\\\\portfolio-starter-GuillaumeDochy\\\\Front-end\\\\calendar-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MyCalendar from './MyCalendar';\nimport { fetchEvents } from './api';\nimport AddEventForm from './AddEventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [isEventDetailsModalOpen, setIsEventDetailsModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  useEffect(() => {\n    fetchEvents().then(data => setEvents(data)).catch(error => console.error('Error fetching events:', error));\n  }, []);\n  const handleAddEvent = newEvent => {\n    // Implement event creation logic, e.g., using your API\n    createEvent(newEvent) // Assuming createEvent is a function in your API\n    .then(createdEvent => {\n      // After creating the event, update the events array with the new event\n      setEvents([...events, createdEvent]);\n      setIsEventDetailsModalOpen(false); // Close the event details modal\n    }).catch(error => console.error('Error adding event:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsEventDetailsModalOpen(true),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyCalendar, {\n      events: events,\n      onAddEvent: handleAddEvent,\n      onEventClick: event => {\n        setSelectedEvent(event);\n        setIsEventDetailsModalOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isEventDetailsModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4oAytgZXEnyFxuruz8SidFkH0zM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MyCalendar","fetchEvents","AddEventForm","jsxDEV","_jsxDEV","App","_s","events","setEvents","isEventDetailsModalOpen","setIsEventDetailsModalOpen","selectedEvent","setSelectedEvent","then","data","catch","error","console","handleAddEvent","newEvent","createEvent","createdEvent","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onAddEvent","onEventClick","event","className","_c","$RefreshReg$"],"sources":["C:/Users/micyl/Documents/_.SCHOOL/2023-24/Dev_5/portfolio-starter-GuillaumeDochy/Front-end/calendar-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MyCalendar from './MyCalendar';\r\nimport { fetchEvents } from './api';\r\nimport AddEventForm from './AddEventForm';\r\n\r\nconst App = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [isEventDetailsModalOpen, setIsEventDetailsModalOpen] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchEvents()\r\n      .then((data) => setEvents(data))\r\n      .catch((error) => console.error('Error fetching events:', error));\r\n  }, []);\r\n\r\n  const handleAddEvent = (newEvent) => {\r\n    // Implement event creation logic, e.g., using your API\r\n    createEvent(newEvent) // Assuming createEvent is a function in your API\r\n      .then((createdEvent) => {\r\n        // After creating the event, update the events array with the new event\r\n        setEvents([...events, createdEvent]);\r\n        setIsEventDetailsModalOpen(false); // Close the event details modal\r\n      })\r\n      .catch((error) => console.error('Error adding event:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setIsEventDetailsModalOpen(true)}>Add Event</button>\r\n      <MyCalendar\r\n        events={events}\r\n        onAddEvent={handleAddEvent}\r\n        onEventClick={(event) => {\r\n          setSelectedEvent(event);\r\n          setIsEventDetailsModalOpen(true);\r\n        }}\r\n      />\r\n\r\n      {isEventDetailsModalOpen && (\r\n        <div className=\"modal\">\r\n          {/* ... */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdE,WAAW,CAAC,CAAC,CACVY,IAAI,CAAEC,IAAI,IAAKN,SAAS,CAACM,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAIC,QAAQ,IAAK;IACnC;IACAC,WAAW,CAACD,QAAQ,CAAC,CAAC;IAAA,CACnBN,IAAI,CAAEQ,YAAY,IAAK;MACtB;MACAb,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEc,YAAY,CAAC,CAAC;MACpCX,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC;EAED,oBACEZ,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMb,0BAA0B,CAAC,IAAI,CAAE;MAAAY,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3EvB,OAAA,CAACJ,UAAU;MACTO,MAAM,EAAEA,MAAO;MACfqB,UAAU,EAAEV,cAAe;MAC3BW,YAAY,EAAGC,KAAK,IAAK;QACvBlB,gBAAgB,CAACkB,KAAK,CAAC;QACvBpB,0BAA0B,CAAC,IAAI,CAAC;MAClC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEDlB,uBAAuB,iBACtBL,OAAA;MAAK2B,SAAS,EAAC;IAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}