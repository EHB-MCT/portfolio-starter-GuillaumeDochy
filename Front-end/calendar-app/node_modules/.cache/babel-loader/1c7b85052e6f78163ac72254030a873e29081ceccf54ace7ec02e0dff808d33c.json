{"ast":null,"code":"import { response } from \"express\";\nconst API_BASE_URL = 'http://localhost:4000/api';\nexport const fetchEvents = () => {\n  return fetch(`${API_BASE_URL}/events`).then(response => response.json()).then(data => data).catch(error => {\n    console.error('Error fetching events:', error);\n    throw error;\n  });\n};\nexport const createEvent = newEvent => {\n  return fetch(`${API_BASE_URL}/events`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json()).then(data => data).catch(error => {\n    console.error('Error creating event:', error);\n    throw error;\n  });\n};\nexport const updateEvent = async (eventId, eventData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(eventData)\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to update event: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(`Failed to update event: ${error.message}`);\n  }\n};\nexport const deleteEvent = async eventId => {\n  const response = await fetch(`${API_BASE_URL}/events/${eventId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    const errorMessage = await response.text();\n    throw new Error(`Failed to delete event: ${errorMessage}`);\n  }\n};","map":{"version":3,"names":["response","API_BASE_URL","fetchEvents","fetch","then","json","data","catch","error","console","createEvent","newEvent","method","headers","body","JSON","stringify","updateEvent","eventId","eventData","ok","Error","status","message","deleteEvent","errorMessage","text"],"sources":["C:/Users/micyl/Documents/_.SCHOOL/2023-24/Dev_5/portfolio-starter-GuillaumeDochy/Front-end/calendar-app/src/api.js"],"sourcesContent":["import { response } from \"express\";\r\n\r\nconst API_BASE_URL = 'http://localhost:4000/api'; \r\n\r\nexport const fetchEvents = () => {\r\n  return fetch(`${API_BASE_URL}/events`)\r\n    .then((response) => response.json())\r\n    .then((data) => data)\r\n    .catch((error) => {\r\n      console.error('Error fetching events:', error);\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const createEvent = (newEvent) => {\r\n  return fetch(`${API_BASE_URL}/events`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(newEvent),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => data)\r\n    .catch((error) => {\r\n      console.error('Error creating event:', error);\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const updateEvent = async (eventId, eventData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(eventData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to update event: ${response.status}`);\r\n    }\r\n\r\n    return await response.json(); \r\n  } catch (error) {\r\n    throw new Error(`Failed to update event: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const deleteEvent = async (eventId) => {\r\n  const response = await fetch(`${API_BASE_URL}/events/${eventId}`, {\r\n    method: 'DELETE',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorMessage = await response.text();\r\n    throw new Error(`Failed to delete event: ${errorMessage}`);\r\n  }\r\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,SAAS;AAElC,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAOC,KAAK,CAAE,GAAEF,YAAa,SAAQ,CAAC,CACnCG,IAAI,CAAEJ,QAAQ,IAAKA,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CACnCD,IAAI,CAAEE,IAAI,IAAKA,IAAI,CAAC,CACpBC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,WAAW,GAAIC,QAAQ,IAAK;EACvC,OAAOR,KAAK,CAAE,GAAEF,YAAa,SAAQ,EAAE;IACrCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC,CACCP,IAAI,CAAEJ,QAAQ,IAAKA,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CACnCD,IAAI,CAAEE,IAAI,IAAKA,IAAI,CAAC,CACpBC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMS,WAAW,GAAG,MAAAA,CAAOC,OAAO,EAAEC,SAAS,KAAK;EACvD,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMG,KAAK,CAAE,GAAEF,YAAa,WAAUiB,OAAQ,EAAC,EAAE;MAChEN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,SAAS;IAChC,CAAC,CAAC;IAEF,IAAI,CAACnB,QAAQ,CAACoB,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,2BAA0BrB,QAAQ,CAACsB,MAAO,EAAC,CAAC;IAC/D;IAEA,OAAO,MAAMtB,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAIa,KAAK,CAAE,2BAA0Bb,KAAK,CAACe,OAAQ,EAAC,CAAC;EAC7D;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAON,OAAO,IAAK;EAC5C,MAAMlB,QAAQ,GAAG,MAAMG,KAAK,CAAE,GAAEF,YAAa,WAAUiB,OAAQ,EAAC,EAAE;IAChEN,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,IAAI,CAACZ,QAAQ,CAACoB,EAAE,EAAE;IAChB,MAAMK,YAAY,GAAG,MAAMzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC;IAC1C,MAAM,IAAIL,KAAK,CAAE,2BAA0BI,YAAa,EAAC,CAAC;EAC5D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}